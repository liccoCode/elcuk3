
package com.amazonservices.mws.FulfillmentInboundShipment._2010_10_01.model;

import javax.xml.bind.annotation.*;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="SellerId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Marketplace" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ShipFromAddress" type="{http://mws.amazonaws.com/FulfillmentInboundShipment/2010-10-01/}Address"/>
 *         &lt;element name="LabelPrepPreference" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="InboundShipmentPlanRequestItems" type="{http://mws.amazonaws.com/FulfillmentInboundShipment/2010-10-01/}InboundShipmentPlanRequestItemList"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Fri Oct 22 09:48:20 UTC 2010
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "sellerId",
    "marketplace",
    "shipFromAddress",
    "labelPrepPreference",
    "inboundShipmentPlanRequestItems"
})
@XmlRootElement(name = "CreateInboundShipmentPlanRequest")
public class CreateInboundShipmentPlanRequest {

    @XmlElement(name = "SellerId", required = true)
    protected String sellerId;
    @XmlElement(name = "Marketplace")
    protected String marketplace;
    @XmlElement(name = "ShipFromAddress", required = true)
    protected Address shipFromAddress;
    @XmlElement(name = "LabelPrepPreference")
    protected String labelPrepPreference;
    @XmlElement(name = "InboundShipmentPlanRequestItems", required = true)
    protected InboundShipmentPlanRequestItemList inboundShipmentPlanRequestItems;

    /**
     * Default constructor
     * 
     */
    public CreateInboundShipmentPlanRequest() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public CreateInboundShipmentPlanRequest(final String sellerId, final String marketplace, final Address shipFromAddress, final String labelPrepPreference, final InboundShipmentPlanRequestItemList inboundShipmentPlanRequestItems) {
        this.sellerId = sellerId;
        this.marketplace = marketplace;
        this.shipFromAddress = shipFromAddress;
        this.labelPrepPreference = labelPrepPreference;
        this.inboundShipmentPlanRequestItems = inboundShipmentPlanRequestItems;
    }

    /**
     * Gets the value of the sellerId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSellerId() {
        return sellerId;
    }

    /**
     * Sets the value of the sellerId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSellerId(String value) {
        this.sellerId = value;
    }

    public boolean isSetSellerId() {
        return (this.sellerId!= null);
    }

    /**
     * Gets the value of the marketplace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMarketplace() {
        return marketplace;
    }

    /**
     * Sets the value of the marketplace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMarketplace(String value) {
        this.marketplace = value;
    }

    public boolean isSetMarketplace() {
        return (this.marketplace!= null);
    }

    /**
     * Gets the value of the shipFromAddress property.
     * 
     * @return
     *     possible object is
     *     {@link Address }
     *     
     */
    public Address getShipFromAddress() {
        return shipFromAddress;
    }

    /**
     * Sets the value of the shipFromAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link Address }
     *     
     */
    public void setShipFromAddress(Address value) {
        this.shipFromAddress = value;
    }

    public boolean isSetShipFromAddress() {
        return (this.shipFromAddress!= null);
    }

    /**
     * Gets the value of the labelPrepPreference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLabelPrepPreference() {
        return labelPrepPreference;
    }

    /**
     * Sets the value of the labelPrepPreference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLabelPrepPreference(String value) {
        this.labelPrepPreference = value;
    }

    public boolean isSetLabelPrepPreference() {
        return (this.labelPrepPreference!= null);
    }

    /**
     * Gets the value of the inboundShipmentPlanRequestItems property.
     * 
     * @return
     *     possible object is
     *     {@link InboundShipmentPlanRequestItemList }
     *     
     */
    public InboundShipmentPlanRequestItemList getInboundShipmentPlanRequestItems() {
        return inboundShipmentPlanRequestItems;
    }

    /**
     * Sets the value of the inboundShipmentPlanRequestItems property.
     * 
     * @param value
     *     allowed object is
     *     {@link InboundShipmentPlanRequestItemList }
     *     
     */
    public void setInboundShipmentPlanRequestItems(InboundShipmentPlanRequestItemList value) {
        this.inboundShipmentPlanRequestItems = value;
    }

    public boolean isSetInboundShipmentPlanRequestItems() {
        return (this.inboundShipmentPlanRequestItems!= null);
    }

    /**
     * Sets the value of the SellerId property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateInboundShipmentPlanRequest withSellerId(String value) {
        setSellerId(value);
        return this;
    }

    /**
     * Sets the value of the Marketplace property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateInboundShipmentPlanRequest withMarketplace(String value) {
        setMarketplace(value);
        return this;
    }

    /**
     * Sets the value of the ShipFromAddress property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateInboundShipmentPlanRequest withShipFromAddress(Address value) {
        setShipFromAddress(value);
        return this;
    }

    /**
     * Sets the value of the LabelPrepPreference property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateInboundShipmentPlanRequest withLabelPrepPreference(String value) {
        setLabelPrepPreference(value);
        return this;
    }

    /**
     * Sets the value of the InboundShipmentPlanRequestItems property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public CreateInboundShipmentPlanRequest withInboundShipmentPlanRequestItems(InboundShipmentPlanRequestItemList value) {
        setInboundShipmentPlanRequestItems(value);
        return this;
    }
    


    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetSellerId()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("SellerId"));
            json.append(" : ");
            json.append(quoteJSON(getSellerId()));
            first = false;
        }
        if (isSetMarketplace()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Marketplace"));
            json.append(" : ");
            json.append(quoteJSON(getMarketplace()));
            first = false;
        }
        if (isSetShipFromAddress()) {
            if (!first) json.append(", ");
            json.append("\"ShipFromAddress\" : {");
            Address  shipFromAddress = getShipFromAddress();


            json.append(shipFromAddress.toJSONFragment());
            json.append("}");
            first = false;
        }
        if (isSetLabelPrepPreference()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("LabelPrepPreference"));
            json.append(" : ");
            json.append(quoteJSON(getLabelPrepPreference()));
            first = false;
        }
        if (isSetInboundShipmentPlanRequestItems()) {
            if (!first) json.append(", ");
            json.append("\"InboundShipmentPlanRequestItems\" : {");
            InboundShipmentPlanRequestItemList  inboundShipmentPlanRequestItems = getInboundShipmentPlanRequestItems();


            json.append(inboundShipmentPlanRequestItems.toJSONFragment());
            json.append("}");
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
